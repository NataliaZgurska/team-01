{"version":3,"file":"commonHelpers.js","sources":["../src/js/storage.js","../src/js/refs.js","../src/main.js"],"sourcesContent":["export function addItemLocalStorage(key, item) {\n  localStorage.setItem(key, JSON.stringify(item));\n}\n\nexport function infoItemLocalStorage(key) {\n  return JSON.parse(localStorage.getItem(key));\n}","export default {\n    form: document.querySelector('#task-form'),\n    list: document.querySelector('#task-list')\n    }\n\n","// Напиши функціонал додавання задач в список, при сабміті форми задача повинна додаватись в дом дерево, та сховище.\n// При перезавантаженні сторінки, список повинен відображатись одразу\n// Реалізувати функціонал видалення елементів зі списку при натисканні на кнопку видалити\n\nimport { nanoid } from 'nanoid';\nimport { addItemLocalStorage, infoItemLocalStorage } from './js/storage'\nimport refs from './js/refs';\n\nconst { form, list } = refs;\nconst TASKS_KEY = 'TASKS_KEY';\n\n\nform.addEventListener('submit', onBtnSubmit);\nlist.addEventListener('click', removeItem);\n\nrestoreData();\n\nfunction onBtnSubmit(e) {\n  e.preventDefault();\n  const inputEl = e.target.taskName.value;\n  addSingleTask(inputEl);\n  e.target.reset();\n}\n\nfunction addSingleTask(value) {\n  const arrItem = infoItemLocalStorage(TASKS_KEY) || [];\n  const ID = nanoid();\n  const item = document.createElement('li');\n  const button = document.createElement('button');\n  button.textContent = ' X';\n  item.textContent = value;\n  item.appendChild(button);\n  button.setAttribute('type', 'button');\n  list.append(item);\n  item.setAttribute('id', `${ID}`);\n  arrItem.push({ ID, value });\n  addItemLocalStorage(TASKS_KEY, arrItem);\n}\n\n\n\nfunction restoreData() {\n  const data = infoItemLocalStorage(TASKS_KEY);\n  if (!data) return;\n  const dataLi = data\n    .map(\n      elem =>\n        `<li id = \"${elem.ID}\">${elem.value} <button type = \"button\">X</button></li>`\n    )\n    .join('');\n  list.insertAdjacentHTML('beforeend', dataLi);\n}\n\nfunction removeItem(event) {\n  if (event.target.nodeName === 'BUTTON') {\n    const idItem = event.target.parentNode.getAttribute('id');\n    event.target.parentNode.remove();\n    const dataArr = infoItemLocalStorage(TASKS_KEY);\n    const newArr = dataArr.filter(item => item.ID !== idItem);\n    addItemLocalStorage(TASKS_KEY, newArr);\n  }\n}\n"],"names":["addItemLocalStorage","key","item","infoItemLocalStorage","refs","form","list","TASKS_KEY","onBtnSubmit","removeItem","restoreData","inputEl","addSingleTask","value","arrItem","ID","nanoid","button","data","dataLi","elem","event","idItem","newArr"],"mappings":"svBAAO,SAASA,EAAoBC,EAAKC,EAAM,CAC7C,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAI,CAAC,CAChD,CAEO,SAASC,EAAqBF,EAAK,CACxC,OAAO,KAAK,MAAM,aAAa,QAAQA,CAAG,CAAC,CAC7C,CCNA,MAAeG,EAAA,CACX,KAAM,SAAS,cAAc,YAAY,EACzC,KAAM,SAAS,cAAc,YAAY,CAC7C,ECKM,CAAE,KAAAC,EAAM,KAAAC,CAAM,EAAGF,EACjBG,EAAY,YAGlBF,EAAK,iBAAiB,SAAUG,CAAW,EAC3CF,EAAK,iBAAiB,QAASG,CAAU,EAEzCC,IAEA,SAASF,EAAY,EAAG,CACtB,EAAE,eAAc,EAChB,MAAMG,EAAU,EAAE,OAAO,SAAS,MAClCC,EAAcD,CAAO,EACrB,EAAE,OAAO,OACX,CAEA,SAASC,EAAcC,EAAO,CAC5B,MAAMC,EAAUX,EAAqBI,CAAS,GAAK,CAAA,EAC7CQ,EAAKC,IACLd,EAAO,SAAS,cAAc,IAAI,EAClCe,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,YAAc,KACrBf,EAAK,YAAcW,EACnBX,EAAK,YAAYe,CAAM,EACvBA,EAAO,aAAa,OAAQ,QAAQ,EACpCX,EAAK,OAAOJ,CAAI,EAChBA,EAAK,aAAa,KAAM,GAAGa,GAAI,EAC/BD,EAAQ,KAAK,CAAE,GAAAC,EAAI,MAAAF,CAAO,CAAA,EAC1Bb,EAAoBO,EAAWO,CAAO,CACxC,CAIA,SAASJ,GAAc,CACrB,MAAMQ,EAAOf,EAAqBI,CAAS,EAC3C,GAAI,CAACW,EAAM,OACX,MAAMC,EAASD,EACZ,IACCE,GACE,aAAaA,EAAK,OAAOA,EAAK,+CACjC,EACA,KAAK,EAAE,EACVd,EAAK,mBAAmB,YAAaa,CAAM,CAC7C,CAEA,SAASV,EAAWY,EAAO,CACzB,GAAIA,EAAM,OAAO,WAAa,SAAU,CACtC,MAAMC,EAASD,EAAM,OAAO,WAAW,aAAa,IAAI,EACxDA,EAAM,OAAO,WAAW,SAExB,MAAME,EADUpB,EAAqBI,CAAS,EACvB,OAAOL,GAAQA,EAAK,KAAOoB,CAAM,EACxDtB,EAAoBO,EAAWgB,CAAM,CACtC,CACH"}